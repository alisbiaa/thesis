name: Build and Deploy to Container App

on:
  push:
    branches: [ feat/ci-cd ]

env:
  RESOURCE_GROUP_NAME: thesisApp

  REGION: westeurope

  FRONT_DOCKER: front-end/Dockerfile.dev
  FRONT_IMAGE: frontend

  API_DOCKER: back-end/Dockerfile.dev
  API_IMAGE: api

jobs:
  provision:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout to the branch
      uses: actions/checkout@v2

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{secrets.mouradyatekasba}}

    - name: Create resource group
      uses: azure/CLI@v1
      with:
        inlineScript: >
          set +x

          echo -e "***************************\n"
          echo -e " Creating Resource Groupe"
          echo -e "***************************\n"

          az group create -l ${{ env.REGION }} -n ${{ env.RESOURCE_GROUP_NAME }}

    - name: Creating resources
      uses: azure/CLI@v1
      with:
        inlineScript: >
          set +x

          echo -e "***************************\n"
          echo -e "    Creating Resources"
          echo -e "***************************\n"

          az deployment group create --resource-group ${{ env.RESOURCE_GROUP_NAME }}

  build:
    runs-on: ubuntu-latest
    needs: provision

    steps:
    - name: Checkout to the branch
      uses: actions/checkout@v2

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.mouradyatekasba }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to ACR
      run: |
        set -euo pipefail
        access_token=$(az account get-access-token --query accessToken -o tsv)
        refresh_token=$(curl https://${{ env.RESOURCE_GROUP_NAME }}acr.azurecr.io/oauth2/exchange -v -d "grant_type=access_token&service=${{ env.RESOURCE_GROUP_NAME }}acr.azurecr.io&access_token=$access_token" | jq -r .refresh_token)
        docker login -u 00000000-0000-0000-0000-000000000000 --password-stdin ${{ env.RESOURCE_GROUP_NAME }}acr.azurecr.io <<< "$refresh_token"

    - name: Build api image and push to ACR
      uses: docker/build-push-action@v2
      with:
        push: true
        tags: ${{ env.RESOURCE_GROUP_NAME }}acr.azurecr.io/${{ env.API_IMAGE }}:${{ github.sha }}
        file: ${{ env.API_DOCKER }}

    - name: Build frontend image and push to ACR
      uses: docker/build-push-action@v2
      with:
        push: true
        tags: ${{ env.RESOURCE_GROUP_NAME }}acr.azurecr.io/${{ env.FRONT_IMAGE }}:${{ github.sha }}
        file: ${{ env.FRONT_DOCKER }}

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout to the branch
      uses: actions/checkout@v2

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.mouradyatekasba }}

    - name: Installing Container Apps extension
      uses: azure/CLI@v1
      with:
        inlineScript: >
          az config set extension.use_dynamic_install=yes_without_prompt
          az extension add --name containerapp --yes

    - name: Login to ACR
      run: |
        set -euo pipefail
        access_token=$(az account get-access-token --query accessToken -o tsv)
        refresh_token=$(curl https://${{ env.RESOURCE_GROUP_NAME }}acr.azurecr.io/oauth2/exchange -v -d "grant_type=access_token&service=${{ env.RESOURCE_GROUP_NAME }}acr.azurecr.io&access_token=$access_token" | jq -r .refresh_token)
        docker login -u 00000000-0000-0000-0000-000000000000 --password-stdin ${{ env.RESOURCE_GROUP_NAME }}acr.azurecr.io <<< "$refresh_token"

    - name: Deploy Container Apps
      uses: azure/CLI@v1
      with:
        inlineScript: >
          az containerapp registry set -n api -g ${{ env.RESOURCE_GROUP_NAME }} --server ${{ env.RESOURCE_GROUP_NAME }}acr.azurecr.io

          az containerapp update -n api -g ${{ env.RESOURCE_GROUP_NAME }} -i ${{ env.RESOURCE_GROUP_NAME }}acr.azurecr.io/${{ env.API_IMAGE }}:${{ github.sha }}

          az containerapp registry set -n frontend -g ${{ env.RESOURCE_GROUP_NAME }} --server ${{ env.RESOURCE_GROUP_NAME }}acr.azurecr.io

          az containerapp update -n frontend -g ${{ env.RESOURCE_GROUP_NAME }} -i ${{ env.RESOURCE_GROUP_NAME }}acr.azurecr.io/${{ env.FRONTEND_IMAGE }}:${{ github.sha }}

    - name: logout
      run: >
        az logout
